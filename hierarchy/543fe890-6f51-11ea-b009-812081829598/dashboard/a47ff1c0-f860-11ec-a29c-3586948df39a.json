{
  "entityType" : "DASHBOARD",
  "entity" : {
    "assignedCustomers" : null,
    "configuration" : {
      "description" : "",
      "widgets" : {
        "bfc43a5b-dee2-8774-4837-e1825e44ee7d" : {
          "isSystemType" : true,
          "bundleAlias" : "cards",
          "typeAlias" : "html_card",
          "type" : "static",
          "title" : "New widget",
          "sizeX" : 30,
          "sizeY" : 2,
          "config" : {
            "datasources" : [ ],
            "timewindow" : {
              "realtime" : {
                "timewindowMs" : 60000
              }
            },
            "showTitle" : false,
            "backgroundColor" : "rgba(0,0,0,0.25)",
            "color" : "rgba(255,255,255,0.87)",
            "padding" : "8px",
            "settings" : {
              "cardHtml" : "<div class='card'>Device Group List</div>",
              "cardCss" : ".card {\n    font-weight: bold;\n    font-size: 13px;\n    color: white;\n    width: 100%;\n    height: 100%;\n    display: flex;\n    align-items: center;\n}"
            },
            "title" : "New HTML Card",
            "dropShadow" : true,
            "showTitleIcon" : false,
            "titleIcon" : null,
            "iconColor" : "rgba(0, 0, 0, 0.87)",
            "iconSize" : "24px",
            "titleTooltip" : "",
            "enableFullscreen" : false,
            "enableDataExport" : false,
            "widgetStyle" : { },
            "titleStyle" : {
              "fontSize" : "16px",
              "fontWeight" : 400
            },
            "useDashboardTimewindow" : true,
            "displayTimewindow" : true,
            "showLegend" : false,
            "actions" : { },
            "margin" : ""
          },
          "id" : "bfc43a5b-dee2-8774-4837-e1825e44ee7d"
        },
        "6f027b2d-9677-d659-fe02-2f85221e3da7" : {
          "isSystemType" : true,
          "bundleAlias" : "cards",
          "typeAlias" : "html_value_card",
          "type" : "latest",
          "title" : "New widget",
          "sizeX" : 43,
          "sizeY" : 2,
          "config" : {
            "datasources" : [ {
              "type" : "entity",
              "dataKeys" : [ {
                "name" : "name",
                "type" : "entityField",
                "label" : "Name",
                "color" : "#2196f3",
                "settings" : { },
                "_hash" : 0.9897567948605666
              } ],
              "entityAliasId" : "32ecbec0-eae2-b42f-1e9d-7878d8721aa1"
            } ],
            "timewindow" : {
              "displayValue" : "",
              "selectedTab" : 0,
              "realtime" : {
                "realtimeType" : 1,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "quickInterval" : "CURRENT_DAY"
              },
              "history" : {
                "historyType" : 0,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "fixedTimewindow" : {
                  "startTimeMs" : 1676909594237,
                  "endTimeMs" : 1676995994237
                },
                "quickInterval" : "CURRENT_DAY"
              },
              "aggregation" : {
                "type" : "AVG",
                "limit" : 25000
              }
            },
            "showTitle" : false,
            "backgroundColor" : "rgba(0,0,0,0.25)",
            "color" : "rgba(255,255,255,0.87)",
            "padding" : "8px",
            "settings" : {
              "cardHtml" : "<div class='card'>\n\n    Device List\n\n</div>",
              "cardCss" : ".card {\n    font-weight: bold;\n    font-size: 13px;\n    color: white;\n    width: 100%;\n    height: 100%;\n    display: flex;\n    align-items: center;\n    justify-content: left;\n}"
            },
            "title" : "New HTML Value Card",
            "dropShadow" : false,
            "enableFullscreen" : false,
            "widgetStyle" : { },
            "titleStyle" : {
              "fontSize" : "16px",
              "fontWeight" : 400
            },
            "useDashboardTimewindow" : true,
            "showLegend" : false,
            "actions" : { },
            "showTitleIcon" : false,
            "titleIcon" : null,
            "iconColor" : "rgba(0, 0, 0, 0.87)",
            "iconSize" : "24px",
            "titleTooltip" : "",
            "enableDataExport" : false,
            "displayTimewindow" : true
          },
          "id" : "6f027b2d-9677-d659-fe02-2f85221e3da7"
        },
        "a7c12d15-4a19-0ff1-48cd-874ac324fb97" : {
          "isSystemType" : true,
          "bundleAlias" : "cards",
          "typeAlias" : "entities_table",
          "type" : "latest",
          "title" : "New widget",
          "sizeX" : 43,
          "sizeY" : 19,
          "config" : {
            "timewindow" : {
              "displayValue" : "",
              "selectedTab" : 0,
              "realtime" : {
                "realtimeType" : 1,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "quickInterval" : "CURRENT_DAY"
              },
              "history" : {
                "historyType" : 0,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "fixedTimewindow" : {
                  "startTimeMs" : 1676909594238,
                  "endTimeMs" : 1676995994238
                },
                "quickInterval" : "CURRENT_DAY"
              },
              "aggregation" : {
                "type" : "NONE",
                "limit" : 200
              }
            },
            "showTitle" : false,
            "backgroundColor" : "rgba(0,0,0,0.25)",
            "color" : "rgba(255,255,255,0.87)",
            "padding" : "4px",
            "settings" : {
              "enableSearch" : true,
              "displayPagination" : true,
              "defaultPageSize" : 10,
              "defaultSortOrder" : "entityName",
              "displayEntityName" : false,
              "displayEntityType" : false,
              "enableSelectColumnDisplay" : false,
              "displayEntityLabel" : true
            },
            "title" : "New Entities table",
            "dropShadow" : true,
            "enableFullscreen" : true,
            "titleStyle" : {
              "fontSize" : "16px",
              "fontWeight" : 400,
              "padding" : "5px 10px 5px 10px"
            },
            "useDashboardTimewindow" : false,
            "showLegend" : false,
            "datasources" : [ {
              "type" : "entity",
              "dataKeys" : [ {
                "name" : "name",
                "type" : "entityField",
                "label" : "Name",
                "color" : "#2196f3",
                "settings" : {
                  "columnWidth" : "0px",
                  "useCellStyleFunction" : false,
                  "cellStyleFunction" : "",
                  "useCellContentFunction" : false,
                  "cellContentFunction" : ""
                },
                "_hash" : 0.3297598762698226
              }, {
                "name" : "type",
                "type" : "entityField",
                "label" : "Type",
                "color" : "#4caf50",
                "settings" : {
                  "columnWidth" : "0px",
                  "useCellStyleFunction" : false,
                  "cellStyleFunction" : "",
                  "useCellContentFunction" : false,
                  "cellContentFunction" : ""
                },
                "_hash" : 0.9594255682493922
              }, {
                "name" : "lastConnectTime",
                "type" : "attribute",
                "label" : "Last Connect Time",
                "color" : "#f44336",
                "settings" : {
                  "columnWidth" : "0px",
                  "useCellStyleFunction" : false,
                  "useCellContentFunction" : false
                },
                "_hash" : 0.1982368056242556,
                "postFuncBody" : "return new Date(value).toLocaleDateString(undefined, { weekday: 'long', year: 'numeric', month: 'long', day: 'numeric', hour: \"numeric\", minute: \"numeric\" });"
              }, {
                "name" : "1stLevelAssetLabel",
                "type" : "timeseries",
                "label" : "Parent Label",
                "color" : "#9c27b0",
                "settings" : {
                  "columnWidth" : "0px",
                  "useCellStyleFunction" : false,
                  "useCellContentFunction" : false
                },
                "_hash" : 0.3779574037808029
              }, {
                "name" : "lastTelemetry",
                "type" : "timeseries",
                "label" : "Last Received Telemetry",
                "color" : "#607d8b",
                "settings" : {
                  "columnWidth" : "0px",
                  "useCellStyleFunction" : false,
                  "useCellContentFunction" : false
                },
                "_hash" : 0.6911695134827065
              } ],
              "entityAliasId" : "f7fcc864-311d-70ca-9727-b9aaadcf9d74"
            } ],
            "showTitleIcon" : false,
            "titleIcon" : null,
            "iconColor" : "rgba(0, 0, 0, 0.87)",
            "iconSize" : "24px",
            "titleTooltip" : "",
            "widgetStyle" : { },
            "displayTimewindow" : true,
            "actions" : {
              "headerButton" : [ ],
              "actionCellButton" : [ {
                "name" : "Add Device To Group",
                "icon" : "domain",
                "type" : "customPretty",
                "customHtml" : "<form #editEntityForm=\"ngForm\" [formGroup]=\"editEntityFormGroup\"\n      (ngSubmit)=\"save()\"  class=\"edit-entity-form\">\n    <mat-toolbar fxLayout=\"row\" color=\"primary\">\n        <h2>Add {{entityName}} to group</h2>\n        <span fxFlex></span>\n        <button mat-icon-button (click)=\"cancel()\" type=\"button\">\n            <mat-icon class=\"material-icons\">close</mat-icon>\n        </button>\n    </mat-toolbar>\n    <mat-progress-bar color=\"warn\" mode=\"indeterminate\" *ngIf=\"isLoading$ | async\">\n    </mat-progress-bar>\n    <div style=\"height: 4px;\" *ngIf=\"!(isLoading$ | async)\"></div>\n    <div mat-dialog-content fxLayout=\"column\">\n        <div fxLayout=\"row\" fxLayoutGap=\"8px\" fxLayout.xs=\"column\"  fxLayoutGap.xs=\"0\">\n            <mat-form-field class=\"example-full-width\" >\n                <mat-label>Asset group</mat-label>\n                <input type=\"text\" matInput  formControlName=\"assetGroup\" [matAutocomplete]=\"auto\" placeholder=\"Asset group\" required>\n                <mat-autocomplete #auto=\"matAutocomplete\">\n                    <mat-option *ngFor=\"let group of groupFilterArray()\" [value]=\"group\">\n                        {{group}}\n                    </mat-option>\n                </mat-autocomplete>\n            </mat-form-field>\n        </div>\n    </div>\n    <div mat-dialog-actions fxLayout=\"row\" fxLayoutAlign=\"end center\">\n        <button mat-button mat-raised-button color=\"primary\"\n                type=\"submit\"\n                [disabled]=\"(isLoading$ | async) || editEntityForm.invalid || !editEntityForm.dirty || invalid()\">\n            Save\n        </button>\n        <button mat-button color=\"primary\"\n                style=\"margin-right: 20px;\"\n                type=\"button\"\n                [disabled]=\"(isLoading$ | async)\"\n                (click)=\"cancel()\" cdkFocusInitial>\n            Cancel\n        </button>\n    </div>\n</form>",
                "customCss" : "\n.edit-entity-form md-input-container {\n    padding-right: 10px;\n}\n\n.edit-entity-form .boolean-value-input {\n    padding-left: 5px;\n}\n\n.edit-entity-form .boolean-value-input .checkbox-label {\n    margin-bottom: 8px;\n    color: rgba(0,0,0,0.54);\n    font-size: 12px;\n}\n\n.relations-list .header {\n    padding-right: 5px;\n    padding-bottom: 5px;\n    padding-left: 5px;\n}\n\n.relations-list .header .cell {\n    padding-right: 5px;\n    padding-left: 5px;\n    font-size: 12px;\n    font-weight: 700;\n    color: rgba(0, 0, 0, .54);\n    white-space: nowrap;\n}\n\n.relations-list .body {\n    padding-right: 5px;\n    padding-bottom: 15px;\n    padding-left: 5px;\n}\n\n.relations-list .body .row {\n    padding-top: 5px;\n}\n\n.relations-list .body .cell {\n    padding-right: 5px;\n    padding-left: 5px;\n}\n\n.relations-list .body md-autocomplete-wrap md-input-container {\n    height: 30px;\n}\n\n.relations-list .body .md-button {\n    margin: 0;\n}\n\n.relations-list.old-relations tb-entity-select tb-entity-autocomplete button {\n    display: none;\n} ",
                "customFunction" : "let $injector = widgetContext.$scope.$injector;\nlet customDialog = $injector.get(widgetContext.servicesMap.get('customDialog'));\nlet entityGroupService = $injector.get(widgetContext.servicesMap.get('entityGroupService'));\n\nopenEditEntityDialog();\n\nfunction openEditEntityDialog() {\n    customDialog.customDialog(htmlTemplate, EditEntityDialogController).subscribe();\n}\n\nfunction EditEntityDialogController(instance) {\n    let vm = instance;\n\n    vm.entityName = entityName;\n    vm.entityType = entityId.entityType;\n    vm.groupArray = [];\n\n    vm.editEntityFormGroup = vm.fb.group({\n        assetGroup: ['', [vm.validators.required]]\n    });\n\n    getEntityInfo();\n\n    vm.cancel = function() {\n        vm.dialogRef.close(null);\n    };\n\n\n    vm.save = function() {\n        vm.editEntityFormGroup.markAsPristine();\n        let id = vm.groupArray.filter(group=>group.name == vm.editEntityFormGroup.controls.assetGroup.value)[0].id.id;\n        entityGroupService.addEntityToEntityGroup(id, entityId.id).subscribe(\n            function () {\n                widgetContext.updateAliases();\n                vm.dialogRef.close(null);\n            }\n        );\n    };\n    \n    vm.invalid = function () {\n        return !vm.groupArray.some(group=>group.name == vm.editEntityFormGroup.controls.assetGroup.value);\n    };\n\n\n    function getEntityInfo() {\n        entityGroupService.getEntityGroups(\"DEVICE\").subscribe(groups=>{\n            vm.groupArray = groups.filter(group=>group.name !== \"All\");\n        });\n    }\n    \n    vm.groupFilterArray = function () {\n        let assetGroupValue = vm.editEntityFormGroup.controls.assetGroup.value;\n        let newArray = [];\n        if (vm.groupArray && vm.groupArray.length) { \n            newArray = vm.groupArray.filter(value=>{\n             return value.name.toLowerCase().indexOf(assetGroupValue.toLowerCase()) === 0;\n             }).map(el=>el.name);\n        }\n        return newArray;\n    };\n}",
                "customResources" : [ ],
                "id" : "39f9a536-f60b-00ee-e8fe-92058018419c"
              }, {
                "name" : "Remove Device from Group",
                "icon" : "remove_circle_outline",
                "type" : "customPretty",
                "customHtml" : "<!--=======================================================================-->\n<!--=====  There are two example templates: for edit and add entity   =====-->\n<!--=======================================================================-->\n<!--========================  Edit entity example  ========================-->\n<!--=======================================================================-->\n<!-- -->\n<!--<md-dialog aria-label=\"Edit entity\">-->\n<!--    <form name=\"editEntityForm\" class=\"edit-entity-form\" ng-submit=\"vm.save()\">-->\n<!--        <md-toolbar>-->\n<!--            <div class=\"md-toolbar-tools\">-->\n<!--                <h2>Edit {{vm.entityType.toLowerCase()}} {{vm.entityName}}</h2>-->\n<!--                <span flex></span>-->\n<!--                <md-button class=\"md-icon-button\" ng-click=\"vm.cancel()\">-->\n<!--                    <ng-md-icon icon=\"close\" aria-label=\"Close\"></ng-md-icon>-->\n<!--                </md-button>-->\n<!--            </div>-->\n<!--        </md-toolbar>-->\n<!--        <md-dialog-content>-->\n<!--            <div class=\"md-dialog-content\">-->\n<!--                <div layout=\"row\">-->\n<!--                    <md-input-container flex class=\"md-block\">-->\n<!--                        <label>Entity Name</label>-->\n<!--                        <input ng-model=\"vm.entityName\" readonly>-->\n<!--                    </md-input-container>-->\n<!--                    <md-input-container flex class=\"md-block\">-->\n<!--                        <label>Entity Type</label>-->\n<!--                        <input ng-model=\"vm.entityType\" readonly>-->\n<!--                    </md-input-container>-->\n<!--                    <md-input-container flex class=\"md-block\">-->\n<!--                        <label>Type</label>-->\n<!--                        <input ng-model=\"vm.type\" readonly>-->\n<!--                    </md-input-container>-->\n<!--                </div>-->\n<!--                <div layout=\"row\">-->\n<!--                    <md-input-container flex class=\"md-block\">-->\n<!--                        <label>Latitude</label>-->\n<!--                        <input name=\"latitude\" type=\"number\" step=\"any\" ng-model=\"vm.attributes.latitude\">-->\n<!--                    </md-input-container>-->\n<!--                    <md-input-container flex class=\"md-block\">-->\n<!--                        <label>Longitude</label>-->\n<!--                        <input name=\"longitude\" type=\"number\" step=\"any\" ng-model=\"vm.attributes.longitude\">-->\n<!--                    </md-input-container>-->\n<!--                </div>-->\n<!--                 <div layout=\"row\">-->\n<!--                    <md-input-container flex class=\"md-block\">-->\n<!--                        <label>Address</label>-->\n<!--                        <input ng-model=\"vm.attributes.address\">-->\n<!--                    </md-input-container>-->\n<!--                    <md-input-container flex class=\"md-block\">-->\n<!--                        <label>Owner</label>-->\n<!--                        <input ng-model=\"vm.attributes.owner\">-->\n<!--                    </md-input-container>-->\n<!--                </div>-->\n<!--                <div layout=\"row\">-->\n<!--                    <md-input-container flex class=\"md-block\">-->\n<!--                        <label>Integer Value</label>-->\n<!--                        <input name=\"integerNumber\" type=\"number\" step=\"1\" ng-pattern=\"/^-?[0-9]+$/\" ng-model=\"vm.attributes.number\">-->\n<!--                        <div ng-messages=\"editEntityForm.integerNumber.$error\">-->\n<!--                            <div ng-message=\"pattern\">Invalid integer value.</div>-->\n<!--                        </div>-->\n<!--                    </md-input-container>-->\n<!--                    <div class=\"boolean-value-input\" layout=\"column\" layout-align=\"center start\" flex>-->\n<!--                        <label class=\"checkbox-label\">Boolean Value</label>-->\n<!--                        <md-checkbox ng-model=\"vm.attributes.booleanValue\" style=\"margin-bottom: 40px;\">-->\n<!--                            {{ (vm.attributes.booleanValue ? \"value.true\" : \"value.false\") | translate }}-->\n<!--                        </md-checkbox>-->\n<!--                    </div>-->\n<!--                </div>-->\n<!--                <div class=\"relations-list old-relations\">-->\n<!--                    <div class=\"md-body-1\" style=\"padding-bottom: 10px; color: rgba(0,0,0,0.57);\">Relations</div>-->\n<!--                    <div class=\"body\" ng-show=\"vm.relations.length\">-->\n<!--                        <div class=\"row\" layout=\"row\" layout-align=\"start center\" ng-repeat=\"relation in vm.relations track by $index\">-->\n<!--                            <div class=\"md-whiteframe-1dp\" flex layout=\"row\" style=\"padding-left: 5px; margin-bottom: 3px;\">-->\n<!--                                <div flex layout=\"column\">-->\n<!--                                    <div layout=\"row\">-->\n<!--                                        <md-input-container class=\"md-block\" style=\"min-width: 100px;\">-->\n<!--                                            <label>Direction</label>-->\n<!--                                            <md-select ng-disabled=\"true\" required ng-model=\"relation.direction\">-->\n<!--                                                <md-option ng-repeat=\"direction in vm.entitySearchDirection\" ng-value=\"direction\">-->\n<!--                                                    {{ (\"relation.search-direction.\" + direction) | translate}}-->\n<!--                                                </md-option>-->\n<!--                                            </md-select>-->\n<!--                                        </md-input-container>-->\n<!--                                        <tb-relation-type-autocomplete ng-disabled=\"true\" flex class=\"md-block\"-->\n<!--                                           the-form=\"editEntityForm\"-->\n<!--                                           ng-model=\"relation.relationType\"-->\n<!--                                           tb-required=\"true\">-->\n<!--                                        </tb-relation-type-autocomplete>-->\n<!--                                    </div>-->\n<!--                                    <div layout=\"row\">-->\n<!--                                        <tb-entity-select flex class=\"md-block\"-->\n<!--                                            the-form=\"editEntityForm\"-->\n<!--                                            ng-disabled=\"true\"-->\n<!--                                            tb-required=\"true\"-->\n<!--                                            ng-model=\"relation.relatedEntity\">-->\n<!--                                        </tb-entity-select>-->\n<!--                                    </div>-->\n<!--                                </div>-->\n<!--                                <div layout=\"column\" layout-align=\"center center\">-->\n<!--                                    <md-button class=\"md-icon-button md-primary\" style=\"width: 40px; min-width: 40px;\"-->\n<!--                                               ng-click=\"vm.removeOldRelation($index,relation)\" aria-label=\"Remove\">-->\n<!--                                        <md-tooltip md-direction=\"top\">Remove relation</md-tooltip>-->\n<!--                                        <md-icon aria-label=\"Remove\" class=\"material-icons\">-->\n<!--                                            close-->\n<!--                                        </md-icon>-->\n<!--                                    </md-button>-->\n<!--                                </div>-->\n<!--                            </div>-->\n<!--                        </div>-->\n<!--                    </div>-->\n<!--                </div>-->\n<!--                <div class=\"relations-list\">-->\n<!--                    <div class=\"md-body-1\" style=\"padding-bottom: 10px; color: rgba(0,0,0,0.57);\">New Relations</div>-->\n<!--                    <div class=\"body\" ng-show=\"vm.newRelations.length\">-->\n<!--                        <div class=\"row\" layout=\"row\" layout-align=\"start center\" ng-repeat=\"relation in vm.newRelations track by $index\">-->\n<!--                            <div class=\"md-whiteframe-1dp\" flex layout=\"row\" style=\"padding-left: 5px; margin-bottom: 3px;\">-->\n<!--                                <div flex layout=\"column\">-->\n<!--                                    <div layout=\"row\">-->\n<!--                                        <md-input-container class=\"md-block\" style=\"min-width: 100px;\">-->\n<!--                                            <label>Direction</label>-->\n<!--                                            <md-select name=\"direction\" required ng-model=\"relation.direction\">-->\n<!--                                                <md-option ng-repeat=\"direction in vm.entitySearchDirection\" ng-value=\"direction\">-->\n<!--                                                    {{ (\"relation.search-direction.\" + direction) | translate}}-->\n<!--                                                </md-option>-->\n<!--                                            </md-select>-->\n<!--                                            <div ng-messages=\"editEntityForm.direction.$error\">-->\n<!--                                                <div ng-message=\"required\">Relation direction is required.</div>-->\n<!--                                            </div>-->\n<!--                                        </md-input-container>-->\n<!--                                        <tb-relation-type-autocomplete flex class=\"md-block\"-->\n<!--                                           the-form=\"editEntityForm\"-->\n<!--                                           ng-model=\"relation.relationType\"-->\n<!--                                           tb-required=\"true\">-->\n<!--                                        </tb-relation-type-autocomplete>-->\n<!--                                    </div>-->\n<!--                                    <div layout=\"row\">-->\n<!--                                        <tb-entity-select flex class=\"md-block\"-->\n<!--                                            the-form=\"editEntityForm\"-->\n<!--                                            tb-required=\"true\"-->\n<!--                                            ng-model=\"relation.relatedEntity\">-->\n<!--                                        </tb-entity-select>-->\n<!--                                    </div>-->\n<!--                                </div>-->\n<!--                                <div layout=\"column\" layout-align=\"center center\">-->\n<!--                                    <md-button class=\"md-icon-button md-primary\" style=\"width: 40px; min-width: 40px;\"-->\n<!--                                               ng-click=\"vm.removeRelation($index)\" aria-label=\"Remove\">-->\n<!--                                        <md-tooltip md-direction=\"top\">Remove relation</md-tooltip>-->\n<!--                                        <md-icon aria-label=\"Remove\" class=\"material-icons\">-->\n<!--                                            close-->\n<!--                                        </md-icon>-->\n<!--                                    </md-button>-->\n<!--                                </div>-->\n<!--                            </div>-->\n<!--                        </div>-->\n<!--                    </div>-->\n<!--                   <div>-->\n<!--                       <md-button class=\"md-primary md-raised\" ng-click=\"vm.addRelation()\" aria-label=\"Add\">-->\n<!--                           <md-tooltip md-direction=\"top\">Add Relation</md-tooltip>-->\n<!--                           Add-->\n<!--                       </md-button>-->\n<!--                   </div> -->\n<!--                </div>-->\n<!--            </div>-->\n<!--        </md-dialog-content>-->\n<!--        <md-dialog-actions>-->\n<!--            <md-button type=\"submit\" ng-disabled=\"editEntityForm.$invalid || !editEntityForm.$dirty\" class=\"md-raised md-primary\">Save</md-button>-->\n<!--            <md-button ng-click=\"vm.cancel()\" class=\"md-primary\">Cancel</md-button>-->\n<!--        </md-dialog-actions>-->\n<!--    </form>-->\n<!--</md-dialog>-->\n<!---->\n<!--========================================================================-->\n<!--=========================  Add entity example  =========================-->\n<!--========================================================================-->\n<!---->\n<!--<md-dialog aria-label=\"Add entity\">-->\n<!--    <form name=\"addEntityForm\" class=\"add-entity-form\" ng-submit=\"vm.save()\">-->\n<!--        <md-toolbar>-->\n<!--            <div class=\"md-toolbar-tools\">-->\n<!--                <h2>Add entity</h2>-->\n<!--                <span flex></span>-->\n<!--                <md-button class=\"md-icon-button\" ng-click=\"vm.cancel()\">-->\n<!--                    <ng-md-icon icon=\"close\" aria-label=\"Close\"></ng-md-icon>-->\n<!--                </md-button>-->\n<!--            </div>-->\n<!--        </md-toolbar>-->\n<!--        <md-dialog-content>-->\n<!--            <div class=\"md-dialog-content\">-->\n<!--                <div layout=\"row\">-->\n<!--                    <md-input-container flex class=\"md-block\">-->\n<!--                        <label>Entity Name</label>-->\n<!--                        <input ng-model=\"vm.entityName\" name=entityName required>-->\n<!--                        <div ng-messages=\"addEntityForm.entityName.$error\">-->\n<!--                            <div ng-message=\"required\">Entity name is required.</div>-->\n<!--                        </div>-->\n<!--                    </md-input-container>-->\n<!--                    <tb-entity-type-select class=\"md-block\" style=\"min-width: 100px; width: 100px;\"-->\n<!--                       the-form=\"addEntityForm\"-->\n<!--                       tb-required=\"true\"-->\n<!--                       allowed-entity-types=\"vm.allowedEntityTypes\"-->\n<!--                       ng-model=\"vm.entityType\">-->\n<!--                    </tb-entity-type-select>-->\n<!--                    <md-input-container flex class=\"md-block\">-->\n<!--                        <label>Entity Subtype</label>-->\n<!--                        <input ng-model=\"vm.type\" name=type required>-->\n<!--                        <div ng-messages=\"addEntityForm.type.$error\">-->\n<!--                            <div ng-message=\"required\">Entity subtype is required.</div>-->\n<!--                        </div>-->\n<!--                    </md-input-container>-->\n<!--                </div>-->\n<!--                <div layout=\"row\">-->\n<!--                    <md-input-container flex class=\"md-block\">-->\n<!--                        <label>Latitude</label>-->\n<!--                        <input name=\"latitude\" type=\"number\" step=\"any\" ng-model=\"vm.attributes.latitude\">-->\n<!--                    </md-input-container>-->\n<!--                    <md-input-container flex class=\"md-block\">-->\n<!--                        <label>Longitude</label>-->\n<!--                        <input name=\"longitude\" type=\"number\" step=\"any\" ng-model=\"vm.attributes.longitude\">-->\n<!--                    </md-input-container>-->\n<!--                </div>-->\n<!--                 <div layout=\"row\">-->\n<!--                    <md-input-container flex class=\"md-block\">-->\n<!--                        <label>Address</label>-->\n<!--                        <input ng-model=\"vm.attributes.address\">-->\n<!--                    </md-input-container>-->\n<!--                    <md-input-container flex class=\"md-block\">-->\n<!--                        <label>Owner</label>-->\n<!--                        <input ng-model=\"vm.attributes.owner\">-->\n<!--                    </md-input-container>-->\n<!--                </div>-->\n<!--                <div layout=\"row\">-->\n<!--                    <md-input-container flex class=\"md-block\">-->\n<!--                        <label>Integer Value</label>-->\n<!--                        <input name=\"integerNumber\" type=\"number\" step=\"1\" ng-pattern=\"/^-?[0-9]+$/\" ng-model=\"vm.attributes.number\">-->\n<!--                        <div ng-messages=\"addEntityForm.integerNumber.$error\">-->\n<!--                            <div ng-message=\"pattern\">Invalid integer value.</div>-->\n<!--                        </div>-->\n<!--                    </md-input-container>-->\n<!--                    <div class=\"boolean-value-input\" layout=\"column\" layout-align=\"center start\" flex>-->\n<!--                        <label class=\"checkbox-label\">Boolean Value</label>-->\n<!--                        <md-checkbox ng-model=\"vm.attributes.booleanValue\" style=\"margin-bottom: 40px;\">-->\n<!--                            {{ (vm.attributes.booleanValue ? \"value.true\" : \"value.false\") | translate }}-->\n<!--                        </md-checkbox>-->\n<!--                    </div>-->\n<!--                </div>-->\n<!--                <div class=\"relations-list\">-->\n<!--                    <div class=\"md-body-1\" style=\"padding-bottom: 10px; color: rgba(0,0,0,0.57);\">Relations</div>-->\n<!--                    <div class=\"body\" ng-show=\"vm.relations.length\">-->\n<!--                        <div class=\"row\" layout=\"row\" layout-align=\"start center\" ng-repeat=\"relation in vm.relations track by $index\">-->\n<!--                            <div class=\"md-whiteframe-1dp\" flex layout=\"row\" style=\"padding-left: 5px;\">-->\n<!--                                <div flex layout=\"column\">-->\n<!--                                    <div layout=\"row\">-->\n<!--                                        <md-input-container class=\"md-block\" style=\"min-width: 100px;\">-->\n<!--                                            <label>Direction</label>-->\n<!--                                            <md-select name=\"direction\" required ng-model=\"relation.direction\">-->\n<!--                                                <md-option ng-repeat=\"direction in vm.entitySearchDirection\" ng-value=\"direction\">-->\n<!--                                                    {{ (\"relation.search-direction.\" + direction) | translate}}-->\n<!--                                                </md-option>-->\n<!--                                            </md-select>-->\n<!--                                            <div ng-messages=\"addEntityForm.direction.$error\">-->\n<!--                                                <div ng-message=\"required\">Relation direction is required.</div>-->\n<!--                                            </div>-->\n<!--                                        </md-input-container>-->\n<!--                                        <tb-relation-type-autocomplete flex class=\"md-block\"-->\n<!--                                           the-form=\"addEntityForm\"-->\n<!--                                           ng-model=\"relation.relationType\"-->\n<!--                                           tb-required=\"true\">-->\n<!--                                        </tb-relation-type-autocomplete>-->\n<!--                                    </div>-->\n<!--                                    <div layout=\"row\">-->\n<!--                                        <tb-entity-select flex class=\"md-block\"-->\n<!--                                            the-form=\"addEntityForm\"-->\n<!--                                            tb-required=\"true\"-->\n<!--                                            ng-model=\"relation.relatedEntity\">-->\n<!--                                        </tb-entity-select>-->\n<!--                                    </div>-->\n<!--                                </div>-->\n<!--                                <div layout=\"column\" layout-align=\"center center\">-->\n<!--                                    <md-button class=\"md-icon-button md-primary\" style=\"width: 40px; min-width: 40px;\"-->\n<!--                                               ng-click=\"vm.removeRelation($index)\" aria-label=\"Remove\">-->\n<!--                                        <md-tooltip md-direction=\"top\">Remove relation</md-tooltip>-->\n<!--                                        <md-icon aria-label=\"Remove\" class=\"material-icons\">-->\n<!--                                            close-->\n<!--                                        </md-icon>-->\n<!--                                    </md-button>-->\n<!--                                </div>-->\n<!--                            </div>-->\n<!--                        </div>-->\n<!--                    </div>-->\n<!--                   <div>-->\n<!--                       <md-button class=\"md-primary md-raised\" ng-click=\"vm.addRelation()\" aria-label=\"Add\">-->\n<!--                           <md-tooltip md-direction=\"top\">Add Relation</md-tooltip>-->\n<!--                           Add-->\n<!--                       </md-button>-->\n<!--                   </div> -->\n<!--                </div>-->\n<!--            </div>-->\n<!--        </md-dialog-content>-->\n<!--        <md-dialog-actions>-->\n<!--            <md-button type=\"submit\" ng-disabled=\"addEntityForm.$invalid || !addEntityForm.$dirty\" class=\"md-raised md-primary\">Create</md-button>-->\n<!--            <md-button ng-click=\"vm.cancel()\" class=\"md-primary\">Cancel</md-button>-->\n<!--        </md-dialog-actions>-->\n<!--    </form>-->\n<!--</md-dialog>-->\n",
                "customCss" : "/*=======================================================================*/\n/*==========  There are two examples: for edit and add entity  ==========*/\n/*=======================================================================*/\n/*========================  Edit entity example  ========================*/\n/*=======================================================================*/\n/*\n.edit-entity-form md-input-container {\n    padding-right: 10px;\n}\n\n.edit-entity-form .boolean-value-input {\n    padding-left: 5px;\n}\n\n.edit-entity-form .boolean-value-input .checkbox-label {\n    margin-bottom: 8px;\n    color: rgba(0,0,0,0.54);\n    font-size: 12px;\n}\n\n.relations-list .header {\n    padding-right: 5px;\n    padding-bottom: 5px;\n    padding-left: 5px;\n}\n\n.relations-list .header .cell {\n    padding-right: 5px;\n    padding-left: 5px;\n    font-size: 12px;\n    font-weight: 700;\n    color: rgba(0, 0, 0, .54);\n    white-space: nowrap;\n}\n\n.relations-list .body {\n    padding-right: 5px;\n    padding-bottom: 15px;\n    padding-left: 5px;\n}\n\n.relations-list .body .row {\n    padding-top: 5px;\n}\n\n.relations-list .body .cell {\n    padding-right: 5px;\n    padding-left: 5px;\n}\n\n.relations-list .body md-autocomplete-wrap md-input-container {\n    height: 30px;\n}\n\n.relations-list .body .md-button {\n    margin: 0;\n}\n\n.relations-list.old-relations tb-entity-select tb-entity-autocomplete button {\n    display: none;\n} \n*/\n/*========================================================================*/\n/*=========================  Add entity example  =========================*/\n/*========================================================================*/\n/*\n.add-entity-form md-input-container {\n    padding-right: 10px;\n}\n\n.add-entity-form .boolean-value-input {\n    padding-left: 5px;\n}\n\n.add-entity-form .boolean-value-input .checkbox-label {\n    margin-bottom: 8px;\n    color: rgba(0,0,0,0.54);\n    font-size: 12px;\n}\n\n.relations-list .header {\n    padding-right: 5px;\n    padding-bottom: 5px;\n    padding-left: 5px;\n}\n\n.relations-list .header .cell {\n    padding-right: 5px;\n    padding-left: 5px;\n    font-size: 12px;\n    font-weight: 700;\n    color: rgba(0, 0, 0, .54);\n    white-space: nowrap;\n}\n\n.relations-list .body {\n    padding-right: 5px;\n    padding-bottom: 15px;\n    padding-left: 5px;\n}\n\n.relations-list .body .row {\n    padding-top: 5px;\n}\n\n.relations-list .body .cell {\n    padding-right: 5px;\n    padding-left: 5px;\n}\n\n.relations-list .body md-autocomplete-wrap md-input-container {\n    height: 30px;\n}\n\n.relations-list .body .md-button {\n    margin: 0;\n}\n*/\n",
                "customFunction" : "let $injector = widgetContext.$scope.$injector;\nlet dialogs = $injector.get(widgetContext.servicesMap.get('dialogs'));\nlet entityGroupService = $injector.get(widgetContext.servicesMap.get('entityGroupService'));\nlet deviceService = $injector.get(widgetContext.servicesMap.get('deviceService'));\nlet selected_asset_group = widgetContext.stateController.getStateParams().selected_device_group;\nif (selected_asset_group) openDeleteEntityDialog();\n\nfunction openDeleteEntityDialog() {\n    let title = 'Remove ' + entityId.entityType.toLowerCase() + ' ' +\n                entityName + ' from group';\n    let content = 'Are you sure you want to remove the ' +\n                 entityId.entityType.toLowerCase() + ' ' + entityName + ' from '+ selected_asset_group.entityName + ' group?';\n    dialogs.confirm(title, content, 'Cancel', 'Remove').subscribe(\n        function(result) {\n            if (result) {\n                deleteEntity();\n            }\n        }\n    );\n}\n\nfunction deleteEntity() {\n    deleteEntityObservable(entityId).subscribe(\n        function success() {\n            widgetContext.updateAliases();\n        },\n        function fail() {\n            showErrorDialog();\n        }\n    );\n}\n\nfunction deleteEntityObservable(entityId) {\n    return entityGroupService.removeEntityFromEntityGroup(selected_asset_group.entityId.id, entityId.id)\n}\n\nfunction showErrorDialog() {\n    let title = 'Error';\n    let content = 'An error occurred while removing the entity. Please try again.';\n    dialogs.alert(title, content, 'CLOSE').subscribe(\n        function(result) {}\n    );\n}",
                "customResources" : [ ],
                "id" : "c884c94a-9e1c-77b0-7e9c-54e7d7ae3608"
              }, {
                "name" : "Delete Device",
                "icon" : "delete",
                "type" : "custom",
                "customFunction" : "let $injector = widgetContext.$scope.$injector;\nlet dialogs = $injector.get(widgetContext.servicesMap.get('dialogs'));\nlet assetService = $injector.get(widgetContext.servicesMap.get('assetService'));\nlet deviceService = $injector.get(widgetContext.servicesMap.get('deviceService'));\n\nopenDeleteEntityDialog();\n\nfunction openDeleteEntityDialog() {\n    let title = 'Delete ' + entityId.entityType.toLowerCase() + ' ' +\n                entityName;\n    let content = 'Are you sure you want to delete the ' +\n                 entityId.entityType.toLowerCase() + ' ' + entityName + '?';\n    dialogs.confirm(title, content, 'Cancel', 'Delete').subscribe(\n        function(result) {\n            if (result) {\n                deleteEntity();\n            }\n        }\n    );\n}\n\nfunction deleteEntity() {\n    deleteEntityObservable(entityId).subscribe(\n        function success() {\n            let aliases = [];\n                        if(widgetContext.datasources && widgetContext.datasources.length) {\n                            let aliasName = widgetContext.datasources[0].aliasName;\n                            for (const [key, value] of Object.entries(widgetContext.dashboard.aliasController.entityAliases)) {\n                                if (value.alias === aliasName) {\n                                    aliases.push(key);\n                                }\n                            }\n                            widgetContext.updateAliases(aliases);\n                        }\n        },\n        function fail() {\n            showErrorDialog();\n        }\n    );\n}\n\nfunction deleteEntityObservable(entityId) {\n    if (entityId.entityType == \"ASSET\") {\n        return assetService.deleteAsset(entityId.id);\n    } else if (entityId.entityType == \"DEVICE\") {\n        return deviceService.deleteDevice(entityId.id);\n    }\n}\n\nfunction showErrorDialog() {\n    let title = 'Error';\n    let content = 'An error occurred while deleting the entity. Please try again.';\n    dialogs.alert(title, content, 'CLOSE').subscribe(\n        function(result) {}\n    );\n}",
                "id" : "b724950f-3424-ba54-849e-1d2ecdd9fc91"
              } ],
              "rowClick" : [ ]
            },
            "enableDataExport" : false
          },
          "id" : "a7c12d15-4a19-0ff1-48cd-874ac324fb97"
        },
        "23d4d04b-972f-b214-5894-f4a9ce503efb" : {
          "isSystemType" : true,
          "bundleAlias" : "cards_bundle",
          "typeAlias" : "customer_device_group_list",
          "type" : "static",
          "title" : "New widget",
          "sizeX" : 8,
          "sizeY" : 5,
          "config" : {
            "datasources" : [ ],
            "timewindow" : {
              "realtime" : {
                "timewindowMs" : 60000
              }
            },
            "showTitle" : false,
            "backgroundColor" : "rgba(0,0,0,0.25)",
            "color" : "rgba(255,255,255,0.87)",
            "padding" : "8px",
            "settings" : {
              "cardHtml" : "<div class='card'>HTML code here</div>",
              "cardCss" : ".card {\n    font-weight: bold;\n    font-size: 32px;\n    color: #999;\n    width: 100%;\n    height: 100%;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n}"
            },
            "title" : "New Customer Device Group List",
            "dropShadow" : true,
            "showTitleIcon" : false,
            "iconColor" : "rgba(0, 0, 0, 0.87)",
            "iconSize" : "24px",
            "titleTooltip" : "",
            "enableFullscreen" : false,
            "enableDataExport" : false,
            "widgetStyle" : { },
            "titleStyle" : {
              "fontSize" : "16px",
              "fontWeight" : 400
            },
            "showLegend" : false,
            "actions" : {
              "rowClick" : [ {
                "name" : "Select Group",
                "icon" : "more_horiz",
                "type" : "updateDashboardState",
                "targetDashboardStateId" : null,
                "setEntityId" : true,
                "stateEntityParamName" : "selected_device_group",
                "openRightLayout" : false,
                "id" : "3371519f-2dd5-0036-3e0a-55956ddbab8e"
              } ],
              "headerButton" : [ {
                "name" : "Ctreate new group",
                "icon" : "add",
                "type" : "customPretty",
                "customHtml" : "\n<form #addEntityForm=\"ngForm\" [formGroup]=\"addEntityFormGroup\"\n      (ngSubmit)=\"save()\" class=\"add-entity-form\">\n    <mat-toolbar fxLayout=\"row\" color=\"primary\">\n        <h2>Add Group</h2>\n        <span fxFlex></span>\n        <button mat-icon-button (click)=\"cancel()\" type=\"button\">\n            <mat-icon class=\"material-icons\">close</mat-icon>\n        </button>\n    </mat-toolbar>\n    <mat-progress-bar color=\"warn\" mode=\"indeterminate\" *ngIf=\"isLoading$ | async\">\n    </mat-progress-bar>\n    <div style=\"height: 4px;\" *ngIf=\"!(isLoading$ | async)\"></div>\n    <div mat-dialog-content fxLayout=\"column\">\n        <div fxLayout=\"row\" fxLayoutGap=\"8px\" fxLayout.xs=\"column\"  fxLayoutGap.xs=\"0\">\n            <mat-form-field fxFlex class=\"mat-block\">\n                <mat-label>Group Name</mat-label>\n                <input matInput formControlName=\"entityName\" required>\n                <mat-error *ngIf=\"addEntityFormGroup.get('entityName').hasError('required')\">\n                    Group name is required.\n                </mat-error>\n            </mat-form-field>\n        </div>\n\n    </div>\n    <div mat-dialog-actions fxLayout=\"row\" fxLayoutAlign=\"end center\">\n        <button mat-button mat-raised-button color=\"primary\"\n                type=\"submit\"\n                [disabled]=\"(isLoading$ | async) || addEntityForm.invalid || !addEntityForm.dirty\">\n            Create\n        </button>\n        <button mat-button color=\"primary\"\n                style=\"margin-right: 20px;\"\n                type=\"button\"\n                [disabled]=\"(isLoading$ | async)\"\n                (click)=\"cancel()\" cdkFocusInitial>\n            Cancel\n        </button>\n    </div>\n</form>\n",
                "customCss" : "/*=======================================================================*/\n/*==========  There are two examples: for edit and add entity  ==========*/\n/*=======================================================================*/\n/*========================  Edit entity example  ========================*/\n/*=======================================================================*/\n/*\n.edit-entity-form .boolean-value-input {\n    padding-left: 5px;\n}\n\n.edit-entity-form .boolean-value-input .checkbox-label {\n    margin-bottom: 8px;\n    color: rgba(0,0,0,0.54);\n    font-size: 12px;\n}\n\n.relations-list .header {\n    padding-right: 5px;\n    padding-bottom: 5px;\n    padding-left: 5px;\n}\n\n.relations-list .header .cell {\n    padding-right: 5px;\n    padding-left: 5px;\n    font-size: 12px;\n    font-weight: 700;\n    color: rgba(0, 0, 0, .54);\n    white-space: nowrap;\n}\n\n.relations-list .mat-form-field-infix {\n    width: auto !important;\n}\n\n.relations-list .body {\n    padding-right: 5px;\n    padding-bottom: 15px;\n    padding-left: 5px;\n}\n\n.relations-list .body .row {\n    padding-top: 5px;\n}\n\n.relations-list .body .cell {\n    padding-right: 5px;\n    padding-left: 5px;\n}\n\n.relations-list .body .md-button {\n    margin: 0;\n}\n*/\n/*========================================================================*/\n/*=========================  Add entity example  =========================*/\n/*========================================================================*/\n/*\n.add-entity-form .boolean-value-input {\n    padding-left: 5px;\n}\n\n.add-entity-form .boolean-value-input .checkbox-label {\n    margin-bottom: 8px;\n    color: rgba(0,0,0,0.54);\n    font-size: 12px;\n}\n\n.relations-list .header {\n    padding-right: 5px;\n    padding-bottom: 5px;\n    padding-left: 5px;\n}\n\n.relations-list .header .cell {\n    padding-right: 5px;\n    padding-left: 5px;\n    font-size: 12px;\n    font-weight: 700;\n    color: rgba(0, 0, 0, .54);\n    white-space: nowrap;\n}\n\n.relations-list .mat-form-field-infix {\n    width: auto !important;\n}\n\n.relations-list .body {\n    padding-right: 5px;\n    padding-bottom: 15px;\n    padding-left: 5px;\n}\n\n.relations-list .body .row {\n    padding-top: 5px;\n}\n\n.relations-list .body .cell {\n    padding-right: 5px;\n    padding-left: 5px;\n}\n\n.relations-list .body .md-button {\n    margin: 0;\n}\n*/\n",
                "customFunction" : "\nlet $injector = widgetContext.$scope.$injector;\nlet customDialog = $injector.get(widgetContext.servicesMap.get('customDialog'));\nlet assetService = $injector.get(widgetContext.servicesMap.get('assetService'));\nlet deviceService = $injector.get(widgetContext.servicesMap.get('deviceService'));\nlet entityGroupService = $injector.get(widgetContext.servicesMap.get('entityGroupService'));\nlet entityRelationService = $injector.get(widgetContext.servicesMap.get('entityRelationService'));\n\nopenAddEntityDialog();\n\nfunction openAddEntityDialog() {\n    customDialog.customDialog(htmlTemplate, AddEntityDialogController).subscribe();\n}\n\nfunction AddEntityDialogController(instance) {\n    let vm = instance;\n\n    vm.addEntityFormGroup = vm.fb.group({\n     entityName: ['', [vm.validators.required]]\n    });\n\n    vm.cancel = function() {\n        vm.dialogRef.close(null);\n    };\n\n\n    vm.save = function() {\n        vm.addEntityFormGroup.markAsPristine();\n        saveEntityObservable().subscribe(\n                    function () {\n                        widgetContext.updateAliases();\n                        widgetContext.$scope.loadData();\n                        vm.dialogRef.close(null);\n                    }\n        );\n    };\n\n    function saveEntityObservable() {\n        const formValues = vm.addEntityFormGroup.value;\n        let entity = {\n            name: formValues.entityName,\n            type: \"DEVICE\"\n        };\n            return entityGroupService.saveEntityGroup(entity);\n\n    }\n\n}\n",
                "customResources" : [ ],
                "id" : "6c0eb2b5-42ac-eb20-9cd8-32abe5638cfb"
              } ],
              "actionCellButton" : [ {
                "name" : "Delete Group",
                "icon" : "delete",
                "type" : "customPretty",
                "customHtml" : "<!--=======================================================================-->\n<!--=====  There are two example templates: for edit and add entity   =====-->\n<!--=======================================================================-->\n<!--========================  Edit entity example  ========================-->\n<!--=======================================================================-->\n<!-- -->\n<!--<form #editEntityForm=\"ngForm\" [formGroup]=\"editEntityFormGroup\"-->\n<!--      (ngSubmit)=\"save()\"  class=\"edit-entity-form\">-->\n<!--    <mat-toolbar fxLayout=\"row\" color=\"primary\">-->\n<!--        <h2>Edit {{entityType.toLowerCase()}} {{entityName}}</h2>-->\n<!--        <span fxFlex></span>-->\n<!--        <button mat-icon-button (click)=\"cancel()\" type=\"button\">-->\n<!--            <mat-icon class=\"material-icons\">close</mat-icon>-->\n<!--        </button>-->\n<!--    </mat-toolbar>-->\n<!--    <mat-progress-bar color=\"warn\" mode=\"indeterminate\" *ngIf=\"isLoading$ | async\">-->\n<!--    </mat-progress-bar>-->\n<!--    <div style=\"height: 4px;\" *ngIf=\"!(isLoading$ | async)\"></div>-->\n<!--    <div mat-dialog-content fxLayout=\"column\">-->\n<!--        <div fxLayout=\"row\" fxLayoutGap=\"8px\" fxLayout.xs=\"column\"  fxLayoutGap.xs=\"0\">-->\n<!--            <mat-form-field fxFlex class=\"mat-block\">-->\n<!--                <mat-label>Entity Name</mat-label>-->\n<!--                <input matInput formControlName=\"entityName\" required readonly=\"\">-->\n<!--            </mat-form-field>-->\n<!--            <mat-form-field fxFlex class=\"mat-block\">-->\n<!--                <mat-label>Entity Label</mat-label>-->\n<!--                <input matInput formControlName=\"entityLabel\">-->\n<!--            </mat-form-field>-->\n<!--        </div>-->\n<!--        <div fxLayout=\"row\" fxLayoutGap=\"8px\" fxLayout.xs=\"column\"  fxLayoutGap.xs=\"0\">-->\n<!--            <mat-form-field fxFlex class=\"mat-block\">-->\n<!--                <mat-label>Entity Type</mat-label>-->\n<!--                <input matInput formControlName=\"entityType\" readonly>-->\n<!--            </mat-form-field>-->\n<!--            <mat-form-field fxFlex class=\"mat-block\">-->\n<!--                <mat-label>Type</mat-label>-->\n<!--                <input matInput formControlName=\"type\" readonly>-->\n<!--            </mat-form-field>-->\n<!--        </div>-->\n<!--        <div formGroupName=\"attributes\" fxLayout=\"column\">-->\n<!--            <div fxLayout=\"row\" fxLayoutGap=\"8px\" fxLayout.xs=\"column\"  fxLayoutGap.xs=\"0\">-->\n<!--                <mat-form-field fxFlex class=\"mat-block\">-->\n<!--                    <mat-label>Latitude</mat-label>-->\n<!--                    <input type=\"number\" step=\"any\" matInput formControlName=\"latitude\">-->\n<!--                </mat-form-field>-->\n<!--                <mat-form-field fxFlex class=\"mat-block\">-->\n<!--                    <mat-label>Longitude</mat-label>-->\n<!--                    <input type=\"number\" step=\"any\" matInput formControlName=\"longitude\">-->\n<!--                </mat-form-field>-->\n<!--            </div>-->\n<!--            <div fxLayout=\"row\" fxLayoutGap=\"8px\" fxLayout.xs=\"column\"  fxLayoutGap.xs=\"0\">-->\n<!--                <mat-form-field fxFlex class=\"mat-block\">-->\n<!--                    <mat-label>Address</mat-label>-->\n<!--                    <input matInput formControlName=\"address\">-->\n<!--                </mat-form-field>-->\n<!--                <mat-form-field fxFlex class=\"mat-block\">-->\n<!--                    <mat-label>Owner</mat-label>-->\n<!--                    <input matInput formControlName=\"owner\">-->\n<!--                </mat-form-field>-->\n<!--            </div>-->\n<!--            <div fxLayout=\"row\" fxLayoutGap=\"8px\" fxLayout.xs=\"column\"  fxLayoutGap.xs=\"0\">-->\n<!--                <mat-form-field fxFlex class=\"mat-block\">-->\n<!--                    <mat-label>Integer Value</mat-label>-->\n<!--                    <input type=\"number\" step=\"1\" matInput formControlName=\"number\">-->\n<!--                    <mat-error *ngIf=\"editEntityFormGroup.get('attributes').get('number').hasError('pattern')\">-->\n<!--                        Invalid integer value.-->\n<!--                    </mat-error>-->\n<!--                </mat-form-field>-->\n<!--                <div class=\"boolean-value-input\" fxLayout=\"column\" fxLayoutAlign=\"center start\" fxFlex>-->\n<!--                    <label class=\"checkbox-label\">Boolean Value</label>-->\n<!--                    <mat-checkbox formControlName=\"booleanValue\" style=\"margin-bottom: 40px;\">-->\n<!--                        {{ (editEntityFormGroup.get('attributes').get('booleanValue').value ? \"value.true\" : \"value.false\") | translate }}-->\n<!--                    </mat-checkbox>-->\n<!--                </div>-->\n<!--            </div>-->\n<!--        </div>-->\n<!--        <div class=\"relations-list old-relations\">-->\n<!--            <div class=\"mat-body-1\" style=\"padding-bottom: 10px; color: rgba(0,0,0,0.57);\">Relations</div>-->\n<!--            <div class=\"body\" [fxShow]=\"oldRelations().length\">-->\n<!--                <div class=\"row\" fxLayout=\"row\" fxLayoutAlign=\"start center\" formArrayName=\"oldRelations\" -->\n<!--                     *ngFor=\"let relation of oldRelations().controls; let i = index;\">-->\n<!--                    <div [formGroupName]=\"i\" class=\"mat-elevation-z2\" fxFlex fxLayout=\"row\" style=\"padding: 5px 0 5px 5px;\">-->\n<!--                        <div fxFlex fxLayout=\"column\">-->\n<!--                            <div fxLayout=\"row\" fxLayoutGap=\"8px\" fxLayout.xs=\"column\"  fxLayoutGap.xs=\"0\">-->\n<!--                                <mat-form-field class=\"mat-block\" style=\"min-width: 100px;\">-->\n<!--                                    <mat-label>Direction</mat-label>-->\n<!--                                    <mat-select formControlName=\"direction\" name=\"direction\">-->\n<!--                                        <mat-option *ngFor=\"let direction of entitySearchDirection | keyvalue\" [value]=\"direction.value\">-->\n<!--                                            {{ (\"relation.search-direction.\" + direction.value) | translate}}-->\n<!--                                        </mat-option>-->\n<!--                                    </mat-select>-->\n<!--                                    <mat-error *ngIf=\"relation.get('direction').hasError('required')\">-->\n<!--                                        Relation direction is required.-->\n<!--                                    </mat-error>-->\n<!--                                </mat-form-field>-->\n<!--                                <tb-relation-type-autocomplete-->\n<!--                                        fxFlex class=\"mat-block\"-->\n<!--                                        formControlName=\"relationType\"-->\n<!--                                        required=\"true\">-->\n<!--                                </tb-relation-type-autocomplete>-->\n<!--                            </div>-->\n<!--                            <div fxLayout=\"row\" fxLayout.xs=\"column\">-->\n<!--                                <tb-entity-select-->\n<!--                                        fxFlex class=\"mat-block\"-->\n<!--                                        required=\"true\"-->\n<!--                                        formControlName=\"relatedEntity\">-->\n<!--                                </tb-entity-select>-->\n<!--                            </div>-->\n<!--                        </div>-->\n<!--                        <div fxLayout=\"column\" fxLayoutAlign=\"center center\">-->\n<!--                            <button mat-icon-button color=\"primary\"-->\n<!--                                    aria-label=\"Remove\"-->\n<!--                                    type=\"button\"-->\n<!--                                    (click)=\"removeOldRelation(i)\"-->\n<!--                                    matTooltip=\"Remove relation\"-->\n<!--                                    matTooltipPosition=\"above\">-->\n<!--                                <mat-icon>close</mat-icon>-->\n<!--                            </button>-->\n<!--                        </div>-->\n<!--                    </div>-->\n<!--                </div>-->\n<!--            </div>-->\n<!--        </div>-->\n<!--        <div class=\"relations-list\">-->\n<!--            <div class=\"mat-body-1\" style=\"padding-bottom: 10px; color: rgba(0,0,0,0.57);\">New Relations</div>-->\n<!--            <div class=\"body\" [fxShow]=\"relations().length\">-->\n<!--                <div class=\"row\" fxLayout=\"row\" fxLayoutAlign=\"start center\" formArrayName=\"relations\" *ngFor=\"let relation of relations().controls; let i = index;\">-->\n<!--                    <div [formGroupName]=\"i\" class=\"mat-elevation-z2\" fxFlex fxLayout=\"row\" style=\"padding: 5px 0 5px 5px;\">-->\n<!--                        <div fxFlex fxLayout=\"column\">-->\n<!--                            <div fxLayout=\"row\" fxLayoutGap=\"8px\" fxLayout.xs=\"column\"  fxLayoutGap.xs=\"0\">-->\n<!--                                <mat-form-field class=\"mat-block\" style=\"min-width: 100px;\">-->\n<!--                                    <mat-label>Direction</mat-label>-->\n<!--                                    <mat-select formControlName=\"direction\" name=\"direction\">-->\n<!--                                        <mat-option *ngFor=\"let direction of entitySearchDirection | keyvalue\" [value]=\"direction.value\">-->\n<!--                                            {{ (\"relation.search-direction.\" + direction.value) | translate}}-->\n<!--                                        </mat-option>-->\n<!--                                    </mat-select>-->\n<!--                                    <mat-error *ngIf=\"relation.get('direction').hasError('required')\">-->\n<!--                                        Relation direction is required.-->\n<!--                                    </mat-error>-->\n<!--                                </mat-form-field>-->\n<!--                                <tb-relation-type-autocomplete-->\n<!--                                        fxFlex class=\"mat-block\"-->\n<!--                                        formControlName=\"relationType\"-->\n<!--                                        [required]=\"true\">-->\n<!--                                </tb-relation-type-autocomplete>-->\n<!--                            </div>-->\n<!--                            <div fxLayout=\"row\" fxLayout.xs=\"column\">-->\n<!--                                <tb-entity-select-->\n<!--                                        fxFlex class=\"mat-block\"-->\n<!--                                        [required]=\"true\"-->\n<!--                                        formControlName=\"relatedEntity\">-->\n<!--                                </tb-entity-select>-->\n<!--                            </div>-->\n<!--                        </div>-->\n<!--                        <div fxLayout=\"column\" fxLayoutAlign=\"center center\">-->\n<!--                            <button mat-icon-button color=\"primary\"-->\n<!--                                    aria-label=\"Remove\"-->\n<!--                                    type=\"button\"-->\n<!--                                    (click)=\"removeRelation(i)\"-->\n<!--                                    matTooltip=\"Remove relation\"-->\n<!--                                    matTooltipPosition=\"above\">-->\n<!--                                <mat-icon>close</mat-icon>-->\n<!--                            </button>-->\n<!--                        </div>-->\n<!--                    </div>-->\n<!--                </div>-->\n<!--            </div>-->\n<!--            <div>-->\n<!--                <button mat-raised-button color=\"primary\"-->\n<!--                        type=\"button\"-->\n<!--                        (click)=\"addRelation()\"-->\n<!--                        matTooltip=\"Add Relation\"-->\n<!--                        matTooltipPosition=\"above\">-->\n<!--                    Add-->\n<!--                </button>-->\n<!--            </div>-->\n<!--        </div>-->\n<!--    </div>-->\n<!--    <div mat-dialog-actions fxLayout=\"row\" fxLayoutAlign=\"end center\">-->\n<!--        <button mat-button mat-raised-button color=\"primary\"-->\n<!--                type=\"submit\"-->\n<!--                [disabled]=\"(isLoading$ | async) || editEntityForm.invalid || !editEntityForm.dirty\">-->\n<!--            Save-->\n<!--        </button>-->\n<!--        <button mat-button color=\"primary\"-->\n<!--                style=\"margin-right: 20px;\"-->\n<!--                type=\"button\"-->\n<!--                [disabled]=\"(isLoading$ | async)\"-->\n<!--                (click)=\"cancel()\" cdkFocusInitial>-->\n<!--            Cancel-->\n<!--        </button>-->\n<!--    </div>-->\n<!--</form>-->\n<!---->\n<!--========================================================================-->\n<!--=========================  Add entity example  =========================-->\n<!--========================================================================-->\n<!---->\n<!--<form #addEntityForm=\"ngForm\" [formGroup]=\"addEntityFormGroup\"-->\n<!--      (ngSubmit)=\"save()\" class=\"add-entity-form\">-->\n<!--    <mat-toolbar fxLayout=\"row\" color=\"primary\">-->\n<!--        <h2>Add entity</h2>-->\n<!--        <span fxFlex></span>-->\n<!--        <button mat-icon-button (click)=\"cancel()\" type=\"button\">-->\n<!--            <mat-icon class=\"material-icons\">close</mat-icon>-->\n<!--        </button>-->\n<!--    </mat-toolbar>-->\n<!--    <mat-progress-bar color=\"warn\" mode=\"indeterminate\" *ngIf=\"isLoading$ | async\">-->\n<!--    </mat-progress-bar>-->\n<!--    <div style=\"height: 4px;\" *ngIf=\"!(isLoading$ | async)\"></div>-->\n<!--    <div mat-dialog-content fxLayout=\"column\">-->\n<!--        <div fxLayout=\"row\" fxLayoutGap=\"8px\" fxLayout.xs=\"column\"  fxLayoutGap.xs=\"0\">-->\n<!--            <mat-form-field fxFlex class=\"mat-block\">-->\n<!--                <mat-label>Entity Name</mat-label>-->\n<!--                <input matInput formControlName=\"entityName\" required>-->\n<!--                <mat-error *ngIf=\"addEntityFormGroup.get('entityName').hasError('required')\">-->\n<!--                    Entity name is required.-->\n<!--                </mat-error>-->\n<!--            </mat-form-field>-->\n<!--            <mat-form-field fxFlex class=\"mat-block\">-->\n<!--                <mat-label>Entity Label</mat-label>-->\n<!--                <input matInput formControlName=\"entityLabel\" >-->\n<!--            </mat-form-field>-->\n<!--        </div>-->\n<!--        <div fxLayout=\"row\" fxLayoutGap=\"8px\" fxLayout.xs=\"column\"  fxLayoutGap.xs=\"0\">-->\n<!--            <tb-entity-type-select-->\n<!--                    class=\"mat-block\"-->\n<!--                    formControlName=\"entityType\"-->\n<!--                    [showLabel]=\"true\"-->\n<!--                    [allowedEntityTypes]=\"allowedEntityTypes\"-->\n<!--            ></tb-entity-type-select>-->\n<!--            <tb-entity-subtype-autocomplete-->\n<!--                    fxFlex *ngIf=\"addEntityFormGroup.get('entityType').value == 'ASSET'\"-->\n<!--                    class=\"mat-block\"-->\n<!--                    formControlName=\"type\"-->\n<!--                    [required]=\"true\"-->\n<!--                    [entityType]=\"'ASSET'\"-->\n<!--            ></tb-entity-subtype-autocomplete>-->\n<!--            <tb-entity-subtype-autocomplete-->\n<!--                    fxFlex *ngIf=\"addEntityFormGroup.get('entityType').value != 'ASSET'\"-->\n<!--                    class=\"mat-block\"-->\n<!--                    formControlName=\"type\"-->\n<!--                    [required]=\"true\"-->\n<!--                    [entityType]=\"'DEVICE'\"-->\n<!--            ></tb-entity-subtype-autocomplete>-->\n<!--        </div>-->\n<!--        <div formGroupName=\"attributes\" fxLayout=\"column\">-->\n<!--            <div fxLayout=\"row\" fxLayoutGap=\"8px\" fxLayout.xs=\"column\"  fxLayoutGap.xs=\"0\">-->\n<!--                <mat-form-field fxFlex class=\"mat-block\">-->\n<!--                    <mat-label>Latitude</mat-label>-->\n<!--                    <input type=\"number\" step=\"any\" matInput formControlName=\"latitude\">-->\n<!--                </mat-form-field>-->\n<!--                <mat-form-field fxFlex class=\"mat-block\">-->\n<!--                    <mat-label>Longitude</mat-label>-->\n<!--                    <input type=\"number\" step=\"any\" matInput formControlName=\"longitude\">-->\n<!--                </mat-form-field>-->\n<!--            </div>-->\n<!--            <div fxLayout=\"row\" fxLayoutGap=\"8px\" fxLayout.xs=\"column\"  fxLayoutGap.xs=\"0\">-->\n<!--                <mat-form-field fxFlex class=\"mat-block\">-->\n<!--                    <mat-label>Address</mat-label>-->\n<!--                    <input matInput formControlName=\"address\">-->\n<!--                </mat-form-field>-->\n<!--                <mat-form-field fxFlex class=\"mat-block\">-->\n<!--                    <mat-label>Owner</mat-label>-->\n<!--                    <input matInput formControlName=\"owner\">-->\n<!--                </mat-form-field>-->\n<!--            </div>-->\n<!--            <div fxLayout=\"row\" fxLayoutGap=\"8px\" fxLayout.xs=\"column\"  fxLayoutGap.xs=\"0\">-->\n<!--                <mat-form-field fxFlex class=\"mat-block\">-->\n<!--                    <mat-label>Integer Value</mat-label>-->\n<!--                    <input type=\"number\" step=\"1\" matInput formControlName=\"number\">-->\n<!--                    <mat-error *ngIf=\"addEntityFormGroup.get('attributes').get('number').hasError('pattern')\">-->\n<!--                        Invalid integer value.-->\n<!--                    </mat-error>-->\n<!--                </mat-form-field>-->\n<!--                <div class=\"boolean-value-input\" fxLayout=\"column\" fxLayoutAlign=\"center start\" fxFlex>-->\n<!--                    <label class=\"checkbox-label\">Boolean Value</label>-->\n<!--                    <mat-checkbox formControlName=\"booleanValue\" style=\"margin-bottom: 40px;\">-->\n<!--                        {{ (addEntityFormGroup.get('attributes').get('booleanValue').value ? \"value.true\" : \"value.false\") | translate }}-->\n<!--                    </mat-checkbox>-->\n<!--                </div>-->\n<!--            </div>-->\n<!--        </div>-->\n<!--        <div class=\"relations-list\">-->\n<!--            <div class=\"mat-body-1\" style=\"padding-bottom: 10px; color: rgba(0,0,0,0.57);\">Relations</div>-->\n<!--            <div class=\"body\" [fxShow]=\"relations().length\">-->\n<!--                <div class=\"row\" fxLayout=\"row\" fxLayoutAlign=\"start center\" formArrayName=\"relations\" *ngFor=\"let relation of relations().controls; let i = index;\">-->\n<!--                    <div [formGroupName]=\"i\" class=\"mat-elevation-z2\" fxFlex fxLayout=\"row\" style=\"padding: 5px 0 5px 5px;\">-->\n<!--                        <div fxFlex fxLayout=\"column\">-->\n<!--                            <div fxLayout=\"row\" fxLayoutGap=\"8px\" fxLayout.xs=\"column\"  fxLayoutGap.xs=\"0\">-->\n<!--                                <mat-form-field class=\"mat-block\" style=\"min-width: 100px;\">-->\n<!--                                    <mat-label>Direction</mat-label>-->\n<!--                                    <mat-select formControlName=\"direction\" name=\"direction\">-->\n<!--                                        <mat-option *ngFor=\"let direction of entitySearchDirection | keyvalue\" [value]=\"direction.value\">-->\n<!--                                            {{ (\"relation.search-direction.\" + direction.value) | translate}}-->\n<!--                                        </mat-option>-->\n<!--                                    </mat-select>-->\n<!--                                    <mat-error *ngIf=\"relation.get('direction').hasError('required')\">-->\n<!--                                        Relation direction is required.-->\n<!--                                    </mat-error>-->\n<!--                                </mat-form-field>-->\n<!--                                <tb-relation-type-autocomplete-->\n<!--                                        fxFlex class=\"mat-block\"-->\n<!--                                        formControlName=\"relationType\"-->\n<!--                                        [required]=\"true\">-->\n<!--                                </tb-relation-type-autocomplete>-->\n<!--                            </div>-->\n<!--                            <div fxLayout=\"row\" fxLayout.xs=\"column\">-->\n<!--                                <tb-entity-select-->\n<!--                                        fxFlex class=\"mat-block\"-->\n<!--                                        [required]=\"true\"-->\n<!--                                        formControlName=\"relatedEntity\">-->\n<!--                                </tb-entity-select>-->\n<!--                            </div>-->\n<!--                        </div>-->\n<!--                        <div fxLayout=\"column\" fxLayoutAlign=\"center center\">-->\n<!--                            <button mat-icon-button color=\"primary\"-->\n<!--                                    aria-label=\"Remove\"-->\n<!--                                    type=\"button\"-->\n<!--                                    (click)=\"removeRelation(i)\"-->\n<!--                                    matTooltip=\"Remove relation\"-->\n<!--                                    matTooltipPosition=\"above\">-->\n<!--                                <mat-icon>close</mat-icon>-->\n<!--                            </button>-->\n<!--                        </div>-->\n<!--                    </div>-->\n<!--                </div>-->\n<!--            </div>-->\n<!--            <div>-->\n<!--                <button mat-raised-button color=\"primary\"-->\n<!--                        type=\"button\"-->\n<!--                        (click)=\"addRelation()\"-->\n<!--                        matTooltip=\"Add Relation\"-->\n<!--                        matTooltipPosition=\"above\">-->\n<!--                    Add-->\n<!--                </button>-->\n<!--            </div>-->\n<!--        </div>-->\n<!--    </div>-->\n<!--    <div mat-dialog-actions fxLayout=\"row\" fxLayoutAlign=\"end center\">-->\n<!--        <button mat-button mat-raised-button color=\"primary\"-->\n<!--                type=\"submit\"-->\n<!--                [disabled]=\"(isLoading$ | async) || addEntityForm.invalid || !addEntityForm.dirty\">-->\n<!--            Create-->\n<!--        </button>-->\n<!--        <button mat-button color=\"primary\"-->\n<!--                style=\"margin-right: 20px;\"-->\n<!--                type=\"button\"-->\n<!--                [disabled]=\"(isLoading$ | async)\"-->\n<!--                (click)=\"cancel()\" cdkFocusInitial>-->\n<!--            Cancel-->\n<!--        </button>-->\n<!--    </div>-->\n<!--</form>-->\n",
                "customCss" : "/*=======================================================================*/\n/*==========  There are two examples: for edit and add entity  ==========*/\n/*=======================================================================*/\n/*========================  Edit entity example  ========================*/\n/*=======================================================================*/\n/*\n.edit-entity-form .boolean-value-input {\n    padding-left: 5px;\n}\n\n.edit-entity-form .boolean-value-input .checkbox-label {\n    margin-bottom: 8px;\n    color: rgba(0,0,0,0.54);\n    font-size: 12px;\n}\n\n.relations-list .header {\n    padding-right: 5px;\n    padding-bottom: 5px;\n    padding-left: 5px;\n}\n\n.relations-list .header .cell {\n    padding-right: 5px;\n    padding-left: 5px;\n    font-size: 12px;\n    font-weight: 700;\n    color: rgba(0, 0, 0, .54);\n    white-space: nowrap;\n}\n\n.relations-list .mat-form-field-infix {\n    width: auto !important;\n}\n\n.relations-list .body {\n    padding-right: 5px;\n    padding-bottom: 15px;\n    padding-left: 5px;\n}\n\n.relations-list .body .row {\n    padding-top: 5px;\n}\n\n.relations-list .body .cell {\n    padding-right: 5px;\n    padding-left: 5px;\n}\n\n.relations-list .body .md-button {\n    margin: 0;\n}\n*/\n/*========================================================================*/\n/*=========================  Add entity example  =========================*/\n/*========================================================================*/\n/*\n.add-entity-form .boolean-value-input {\n    padding-left: 5px;\n}\n\n.add-entity-form .boolean-value-input .checkbox-label {\n    margin-bottom: 8px;\n    color: rgba(0,0,0,0.54);\n    font-size: 12px;\n}\n\n.relations-list .header {\n    padding-right: 5px;\n    padding-bottom: 5px;\n    padding-left: 5px;\n}\n\n.relations-list .header .cell {\n    padding-right: 5px;\n    padding-left: 5px;\n    font-size: 12px;\n    font-weight: 700;\n    color: rgba(0, 0, 0, .54);\n    white-space: nowrap;\n}\n\n.relations-list .mat-form-field-infix {\n    width: auto !important;\n}\n\n.relations-list .body {\n    padding-right: 5px;\n    padding-bottom: 15px;\n    padding-left: 5px;\n}\n\n.relations-list .body .row {\n    padding-top: 5px;\n}\n\n.relations-list .body .cell {\n    padding-right: 5px;\n    padding-left: 5px;\n}\n\n.relations-list .body .md-button {\n    margin: 0;\n}\n*/\n",
                "customFunction" : "let $injector = widgetContext.$scope.$injector;\nlet dialogs = $injector.get(widgetContext.servicesMap.get('dialogs'));\nlet entityGroupService = $injector.get(widgetContext.servicesMap.get('entityGroupService'));\nlet deviceService = $injector.get(widgetContext.servicesMap.get('deviceService'));\n\nopenDeleteEntityDialog();\n\nfunction openDeleteEntityDialog() {\n    let title = 'Delete ' + entityId.entityType.toLowerCase() + ' ' +\n                entityName;\n    let content = 'Are you sure you want to delete the ' +\n                 entityId.entityType.toLowerCase() + ' ' + entityName + '?';\n    dialogs.confirm(title, content, 'Cancel', 'Delete').subscribe(\n        function(result) {\n            if (result) {\n                deleteEntity();\n            }\n        }\n    );\n}\n\nfunction deleteEntity() {\n    deleteEntityObservable(entityId).subscribe(\n        function success() {\n                let params = widgetContext.stateController.getStateParams();\n                delete params.selected_asset_group;\n                widgetContext.stateController.updateState(\"default\", params);\n                widgetContext.$scope.loadData();\n            widgetContext.updateAliases();\n            \n        },\n        function fail() {\n            showErrorDialog();\n        }\n    );\n}\n\nfunction deleteEntityObservable(entityId) {\n    return entityGroupService.deleteEntityGroup(entityId.id);\n}\n\nfunction showErrorDialog() {\n    let title = 'Error';\n    let content = 'An error occurred while deleting the entity. Please try again.';\n    dialogs.alert(title, content, 'CLOSE').subscribe(\n        function(result) {}\n    );\n}",
                "customResources" : [ ],
                "id" : "afced938-1c34-ac16-3bc8-a2cb14fe1e3a"
              } ]
            }
          },
          "row" : 0,
          "col" : 0,
          "id" : "23d4d04b-972f-b214-5894-f4a9ce503efb"
        },
        "b04398f9-e5e1-56e0-ab66-c5d32fe9c29a" : {
          "isSystemType" : true,
          "bundleAlias" : "cards",
          "typeAlias" : "html_value_card",
          "type" : "latest",
          "title" : "New widget",
          "sizeX" : 35,
          "sizeY" : 2,
          "config" : {
            "datasources" : [ {
              "type" : "entity",
              "dataKeys" : [ {
                "name" : "name",
                "type" : "entityField",
                "label" : "Name",
                "color" : "#4caf50",
                "settings" : { },
                "_hash" : 0.2486429995985262
              } ],
              "entityAliasId" : "32ecbec0-eae2-b42f-1e9d-7878d8721aa1"
            } ],
            "timewindow" : {
              "displayValue" : "",
              "selectedTab" : 0,
              "realtime" : {
                "realtimeType" : 1,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "quickInterval" : "CURRENT_DAY"
              },
              "history" : {
                "historyType" : 0,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "fixedTimewindow" : {
                  "startTimeMs" : 1676909594238,
                  "endTimeMs" : 1676995994238
                },
                "quickInterval" : "CURRENT_DAY"
              },
              "aggregation" : {
                "type" : "AVG",
                "limit" : 25000
              }
            },
            "showTitle" : false,
            "backgroundColor" : "rgba(0,0,0,0.25)",
            "color" : "rgba(255,255,255,0.87)",
            "padding" : "8px",
            "settings" : {
              "cardHtml" : "<div class='card'>\n\n    Alarms & Notification\n\n</div>",
              "cardCss" : ".card {\n    font-weight: bold;\n    font-size: 13px;\n    color: white;\n    width: 100%;\n    height: 100%;\n    display: flex;\n    align-items: center;\n    justify-content: left;\n}"
            },
            "title" : "New HTML Value Card",
            "dropShadow" : false,
            "enableFullscreen" : false,
            "widgetStyle" : { },
            "titleStyle" : {
              "fontSize" : "16px",
              "fontWeight" : 400
            },
            "useDashboardTimewindow" : true,
            "showLegend" : false,
            "actions" : { },
            "showTitleIcon" : false,
            "titleIcon" : null,
            "iconColor" : "rgba(0, 0, 0, 0.87)",
            "iconSize" : "24px",
            "titleTooltip" : "",
            "enableDataExport" : false,
            "displayTimewindow" : true
          },
          "id" : "b04398f9-e5e1-56e0-ab66-c5d32fe9c29a"
        },
        "03ff3d38-3e3f-2baa-199a-2710ed49e26c" : {
          "isSystemType" : true,
          "bundleAlias" : "cards",
          "typeAlias" : "html_value_card",
          "type" : "latest",
          "title" : "New widget",
          "sizeX" : 38,
          "sizeY" : 2,
          "config" : {
            "datasources" : [ {
              "type" : "entity",
              "dataKeys" : [ {
                "name" : "name",
                "type" : "entityField",
                "label" : "Name",
                "color" : "#4caf50",
                "settings" : { },
                "_hash" : 0.2486429995985262
              } ],
              "entityAliasId" : "32ecbec0-eae2-b42f-1e9d-7878d8721aa1"
            } ],
            "timewindow" : {
              "displayValue" : "",
              "selectedTab" : 0,
              "realtime" : {
                "realtimeType" : 1,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "quickInterval" : "CURRENT_DAY"
              },
              "history" : {
                "historyType" : 0,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "fixedTimewindow" : {
                  "startTimeMs" : 1676909594238,
                  "endTimeMs" : 1676995994238
                },
                "quickInterval" : "CURRENT_DAY"
              },
              "aggregation" : {
                "type" : "AVG",
                "limit" : 25000
              }
            },
            "showTitle" : false,
            "backgroundColor" : "rgba(0,0,0,0.25)",
            "color" : "rgba(255,255,255,0.87)",
            "padding" : "8px",
            "settings" : {
              "cardHtml" : "<div class='card'>\n\n    ${Name}: Access & Privileges \n\n</div>",
              "cardCss" : ".card {\n    font-weight: bold;\n    font-size: 13px;\n    color: white;\n    width: 100%;\n    height: 100%;\n    display: flex;\n    align-items: center;\n    justify-content: left;\n}"
            },
            "title" : "New HTML Value Card",
            "dropShadow" : false,
            "enableFullscreen" : false,
            "widgetStyle" : { },
            "titleStyle" : {
              "fontSize" : "16px",
              "fontWeight" : 400
            },
            "useDashboardTimewindow" : true,
            "showLegend" : false,
            "actions" : { },
            "showTitleIcon" : false,
            "titleIcon" : null,
            "iconColor" : "rgba(0, 0, 0, 0.87)",
            "iconSize" : "24px",
            "titleTooltip" : "",
            "enableDataExport" : false,
            "displayTimewindow" : true
          },
          "id" : "03ff3d38-3e3f-2baa-199a-2710ed49e26c"
        },
        "5b552612-1d5c-ac21-d832-6077cff59780" : {
          "isSystemType" : true,
          "bundleAlias" : "alarm_widgets",
          "typeAlias" : "alarms_table",
          "type" : "alarm",
          "title" : "New widget",
          "sizeX" : 35,
          "sizeY" : 13,
          "config" : {
            "timewindow" : {
              "hideInterval" : false,
              "hideAggregation" : false,
              "hideAggInterval" : false,
              "selectedTab" : 0,
              "realtime" : {
                "timewindowMs" : 86400000,
                "interval" : 1000
              },
              "aggregation" : {
                "type" : "NONE",
                "limit" : 200
              }
            },
            "showTitle" : true,
            "backgroundColor" : "rgba(0,0,0,0.25)",
            "color" : "rgba(255,255,255,0.87)",
            "padding" : "4px",
            "settings" : {
              "enableSelection" : true,
              "enableSearch" : true,
              "displayDetails" : true,
              "allowAcknowledgment" : true,
              "allowClear" : true,
              "displayPagination" : true,
              "defaultPageSize" : 10,
              "defaultSortOrder" : "-createdTime",
              "enableSelectColumnDisplay" : true,
              "enableFilter" : true
            },
            "title" : "New Alarms table",
            "dropShadow" : true,
            "enableFullscreen" : true,
            "titleStyle" : {
              "fontSize" : "16px",
              "fontWeight" : 400,
              "padding" : "5px 10px 5px 10px"
            },
            "useDashboardTimewindow" : false,
            "showLegend" : false,
            "alarmSource" : {
              "type" : "entity",
              "name" : "alarms",
              "entityAliasId" : "41ddd863-f317-13b4-83ab-784ffaaad8be",
              "filterId" : null,
              "dataKeys" : [ {
                "name" : "createdTime",
                "type" : "alarm",
                "label" : "Created time",
                "color" : "#2196f3",
                "settings" : { },
                "_hash" : 0.6136093032178094
              }, {
                "name" : "Originator",
                "type" : "alarm",
                "label" : "details.originatorLabel",
                "color" : "#9c27b0",
                "settings" : {
                  "customTitle" : "Originator",
                  "columnWidth" : "0px",
                  "useCellStyleFunction" : false,
                  "useCellContentFunction" : false,
                  "defaultColumnVisibility" : "visible",
                  "columnSelectionToDisplay" : "enabled",
                  "columnExportOption" : "onlyVisible"
                },
                "_hash" : 0.8266792014456779,
                "aggregationType" : null,
                "units" : null,
                "decimals" : null,
                "funcBody" : null,
                "usePostProcessing" : null,
                "postFuncBody" : null
              }, {
                "name" : "type",
                "type" : "alarm",
                "label" : "Type",
                "color" : "#f44336",
                "settings" : { },
                "_hash" : 0.5079140687676105
              }, {
                "name" : "severity",
                "type" : "alarm",
                "label" : "Severity",
                "color" : "#ffc107",
                "settings" : { },
                "_hash" : 0.1523720916887601
              }, {
                "name" : "status",
                "type" : "alarm",
                "label" : "Status",
                "color" : "#607d8b",
                "settings" : { },
                "_hash" : 0.6354645526351983
              } ]
            },
            "alarmSearchStatus" : "ACTIVE",
            "alarmsPollingInterval" : 30,
            "showTitleIcon" : false,
            "titleIcon" : null,
            "iconColor" : "rgba(0, 0, 0, 0.87)",
            "iconSize" : "24px",
            "titleTooltip" : "",
            "widgetStyle" : { },
            "displayTimewindow" : true,
            "actions" : { },
            "datasources" : [ ],
            "enableDataExport" : true,
            "alarmsMaxCountLoad" : 0,
            "alarmsFetchSize" : 100
          },
          "id" : "5b552612-1d5c-ac21-d832-6077cff59780"
        },
        "c0e5b7de-1fdb-3540-7ce6-6b6a3cb3b7da" : {
          "isSystemType" : true,
          "bundleAlias" : "admin_bundle",
          "typeAlias" : "group_permissions",
          "type" : "static",
          "title" : "New widget",
          "sizeX" : 9.5,
          "sizeY" : 5,
          "config" : {
            "datasources" : [ ],
            "timewindow" : {
              "realtime" : {
                "timewindowMs" : 60000
              }
            },
            "showTitle" : false,
            "backgroundColor" : "rgba(0,0,0,0.25)",
            "color" : "rgba(255,255,255,0.87)",
            "padding" : "8px",
            "settings" : {
              "state_param_name" : "selected_device_group"
            },
            "title" : "New Group Permissions",
            "dropShadow" : true,
            "showTitleIcon" : false,
            "iconColor" : "rgba(0, 0, 0, 0.87)",
            "iconSize" : "24px",
            "titleTooltip" : "",
            "enableFullscreen" : true,
            "enableDataExport" : true,
            "widgetStyle" : { },
            "titleStyle" : {
              "fontSize" : "16px",
              "fontWeight" : 400
            },
            "showLegend" : false
          },
          "row" : 0,
          "col" : 0,
          "id" : "c0e5b7de-1fdb-3540-7ce6-6b6a3cb3b7da"
        },
        "d7b240d3-d925-5705-197b-cc08be1a6ca0" : {
          "isSystemType" : true,
          "bundleAlias" : "admin_bundle",
          "typeAlias" : "logo",
          "type" : "static",
          "title" : "New widget",
          "sizeX" : 7.5,
          "sizeY" : 3,
          "config" : {
            "datasources" : [ ],
            "timewindow" : {
              "realtime" : {
                "timewindowMs" : 60000
              }
            },
            "showTitle" : false,
            "backgroundColor" : "#0e0738",
            "color" : "rgba(255,255,255,0.87)",
            "padding" : "8px",
            "settings" : { },
            "title" : "New Logo",
            "dropShadow" : true,
            "showTitleIcon" : false,
            "iconColor" : "rgba(0, 0, 0, 0.87)",
            "iconSize" : "24px",
            "titleTooltip" : "",
            "enableFullscreen" : false,
            "enableDataExport" : false,
            "widgetStyle" : { },
            "titleStyle" : {
              "fontSize" : "16px",
              "fontWeight" : 400
            },
            "showLegend" : false,
            "widgetCss" : "",
            "noDataDisplayMessage" : "",
            "pageSize" : 1024
          },
          "row" : 0,
          "col" : 0,
          "id" : "d7b240d3-d925-5705-197b-cc08be1a6ca0"
        },
        "db67adc8-8bdc-d671-2b90-61d4c14ac52b" : {
          "isSystemType" : true,
          "bundleAlias" : "admin_bundle",
          "typeAlias" : "dashboard_selector",
          "type" : "static",
          "title" : "New widget",
          "sizeX" : 7.5,
          "sizeY" : 3,
          "config" : {
            "datasources" : [ ],
            "timewindow" : {
              "realtime" : {
                "timewindowMs" : 60000
              }
            },
            "showTitle" : false,
            "backgroundColor" : "#0e0738",
            "color" : "rgba(255,255,255,0.87)",
            "padding" : "8px",
            "settings" : { },
            "title" : "New Dashboard Selector",
            "dropShadow" : true,
            "showTitleIcon" : false,
            "iconColor" : "rgba(0, 0, 0, 0.87)",
            "iconSize" : "24px",
            "titleTooltip" : "",
            "enableFullscreen" : false,
            "enableDataExport" : false,
            "widgetStyle" : { },
            "titleStyle" : {
              "fontSize" : "16px",
              "fontWeight" : 400
            },
            "showLegend" : false,
            "widgetCss" : "",
            "noDataDisplayMessage" : "",
            "pageSize" : 1024
          },
          "row" : 0,
          "col" : 0,
          "id" : "db67adc8-8bdc-d671-2b90-61d4c14ac52b"
        },
        "5d530aae-9413-dd48-c310-26d32ebe7f9f" : {
          "isSystemType" : true,
          "bundleAlias" : "admin_bundle",
          "typeAlias" : "admin_icons_v2",
          "type" : "static",
          "title" : "New widget",
          "sizeX" : 7.5,
          "sizeY" : 3,
          "config" : {
            "datasources" : [ ],
            "timewindow" : {
              "realtime" : {
                "timewindowMs" : 60000
              }
            },
            "showTitle" : false,
            "backgroundColor" : "#0e0738",
            "color" : "rgba(255,255,255,0.87)",
            "padding" : "8px",
            "settings" : { },
            "title" : "New Admin Icons V2",
            "dropShadow" : true,
            "showTitleIcon" : false,
            "iconColor" : "rgba(0, 0, 0, 0.87)",
            "iconSize" : "24px",
            "titleTooltip" : "",
            "enableFullscreen" : true,
            "enableDataExport" : true,
            "widgetStyle" : { },
            "titleStyle" : {
              "fontSize" : "16px",
              "fontWeight" : 400
            },
            "showLegend" : false,
            "widgetCss" : "",
            "noDataDisplayMessage" : "",
            "pageSize" : 1024
          },
          "row" : 0,
          "col" : 0,
          "id" : "5d530aae-9413-dd48-c310-26d32ebe7f9f"
        }
      },
      "states" : {
        "default" : {
          "name" : "Device Health",
          "root" : true,
          "layouts" : {
            "main" : {
              "widgets" : {
                "bfc43a5b-dee2-8774-4837-e1825e44ee7d" : {
                  "sizeX" : 31,
                  "sizeY" : 2,
                  "row" : 3,
                  "col" : 0
                },
                "6f027b2d-9677-d659-fe02-2f85221e3da7" : {
                  "sizeX" : 44,
                  "sizeY" : 2,
                  "row" : 3,
                  "col" : 31
                },
                "a7c12d15-4a19-0ff1-48cd-874ac324fb97" : {
                  "sizeX" : 44,
                  "sizeY" : 19,
                  "row" : 5,
                  "col" : 31
                },
                "23d4d04b-972f-b214-5894-f4a9ce503efb" : {
                  "sizeX" : 31,
                  "sizeY" : 19,
                  "row" : 5,
                  "col" : 0
                },
                "b04398f9-e5e1-56e0-ab66-c5d32fe9c29a" : {
                  "sizeX" : 36,
                  "sizeY" : 2,
                  "row" : 24,
                  "col" : 39
                },
                "03ff3d38-3e3f-2baa-199a-2710ed49e26c" : {
                  "sizeX" : 39,
                  "sizeY" : 2,
                  "row" : 24,
                  "col" : 0
                },
                "5b552612-1d5c-ac21-d832-6077cff59780" : {
                  "sizeX" : 36,
                  "sizeY" : 13,
                  "row" : 26,
                  "col" : 39
                },
                "c0e5b7de-1fdb-3540-7ce6-6b6a3cb3b7da" : {
                  "sizeX" : 39,
                  "sizeY" : 13,
                  "row" : 26,
                  "col" : 0
                },
                "d7b240d3-d925-5705-197b-cc08be1a6ca0" : {
                  "sizeX" : 12,
                  "sizeY" : 3,
                  "row" : 0,
                  "col" : 0
                },
                "db67adc8-8bdc-d671-2b90-61d4c14ac52b" : {
                  "sizeX" : 42,
                  "sizeY" : 3,
                  "row" : 0,
                  "col" : 12
                },
                "5d530aae-9413-dd48-c310-26d32ebe7f9f" : {
                  "sizeX" : 21,
                  "sizeY" : 3,
                  "row" : 0,
                  "col" : 54
                }
              },
              "gridSettings" : {
                "backgroundColor" : "#0e0738",
                "color" : "rgba(0,0,0,0.870588)",
                "columns" : 75,
                "margin" : 2,
                "backgroundSizeMode" : "100%",
                "autoFillHeight" : true,
                "backgroundImageUrl" : null,
                "mobileAutoFillHeight" : false,
                "mobileRowHeight" : 70
              }
            }
          }
        }
      },
      "entityAliases" : {
        "f7fcc864-311d-70ca-9727-b9aaadcf9d74" : {
          "id" : "f7fcc864-311d-70ca-9727-b9aaadcf9d74",
          "alias" : "Selected Devices",
          "filter" : {
            "type" : "entityGroup",
            "resolveMultiple" : true,
            "groupStateEntity" : true,
            "stateEntityParamName" : "selected_device_group",
            "defaultStateGroupType" : "DEVICE",
            "defaultStateEntityGroup" : "844ddc00-9b9c-11ea-a561-95cd528454c9",
            "groupType" : null,
            "entityGroup" : null
          }
        },
        "8c74476d-577c-a4ef-687d-dc29bc95e2fd" : {
          "id" : "8c74476d-577c-a4ef-687d-dc29bc95e2fd",
          "alias" : "Device Groups",
          "filter" : {
            "type" : "entityGroupList",
            "resolveMultiple" : true,
            "groupType" : "DEVICE",
            "entityGroupList" : [ "844ddc00-9b9c-11ea-a561-95cd528454c9", "86591550-9b9c-11ea-a561-95cd528454c9", "869c86f0-9b9c-11ea-a561-95cd528454c9", "86afe7e0-9b9c-11ea-a561-95cd528454c9" ]
          }
        },
        "1d1c5aea-9a96-b8d9-1f55-b59bc62c7a1e" : {
          "id" : "1d1c5aea-9a96-b8d9-1f55-b59bc62c7a1e",
          "alias" : "Polygon",
          "filter" : {
            "type" : "singleEntity",
            "resolveMultiple" : false,
            "singleEntity" : {
              "entityType" : "DEVICE",
              "id" : "9aa812f0-c0f8-11ea-b6f6-e17d5574691d"
            }
          }
        },
        "32ecbec0-eae2-b42f-1e9d-7878d8721aa1" : {
          "id" : "32ecbec0-eae2-b42f-1e9d-7878d8721aa1",
          "alias" : "Selected Device Group",
          "filter" : {
            "type" : "stateEntity",
            "resolveMultiple" : false,
            "stateEntityParamName" : "selected_device_group",
            "defaultStateEntity" : null
          }
        },
        "41ddd863-f317-13b4-83ab-784ffaaad8be" : {
          "id" : "41ddd863-f317-13b4-83ab-784ffaaad8be",
          "alias" : "Status Alarm Asset",
          "filter" : {
            "type" : "singleEntity",
            "resolveMultiple" : false,
            "singleEntity" : {
              "entityType" : "ASSET",
              "id" : "2d9362f0-89f8-11ea-886a-31552cfa7a2a"
            }
          }
        },
        "73b62d51-dffd-897f-32ed-3a70cd557074" : {
          "id" : "73b62d51-dffd-897f-32ed-3a70cd557074",
          "alias" : "Locations",
          "filter" : {
            "type" : "singleEntity",
            "resolveMultiple" : false,
            "singleEntity" : {
              "entityType" : "ASSET",
              "id" : "2afdb0b0-1156-11ea-b8a2-7323fcd53d8f"
            }
          }
        }
      },
      "timewindow" : {
        "hideInterval" : false,
        "hideAggregation" : false,
        "hideAggInterval" : false,
        "hideTimezone" : false,
        "selectedTab" : 0,
        "realtime" : {
          "realtimeType" : 0,
          "timewindowMs" : 2592000000,
          "quickInterval" : "CURRENT_DAY",
          "interval" : 7200000
        },
        "aggregation" : {
          "type" : "AVG",
          "limit" : 25000
        }
      },
      "settings" : {
        "stateControllerId" : "entity",
        "showTitle" : false,
        "showDashboardsSelect" : false,
        "showEntitiesSelect" : false,
        "showDashboardTimewindow" : false,
        "showDashboardExport" : true,
        "toolbarAlwaysOpen" : false,
        "titleColor" : "rgba(0,0,0,0.870588)",
        "showDashboardLogo" : false,
        "dashboardLogoUrl" : null,
        "hideToolbar" : false,
        "showFilters" : true,
        "showUpdateDashboardImage" : true,
        "dashboardCss" : ""
      },
      "filters" : { }
    },
    "createdTime" : 1656585450204,
    "customerId" : {
      "entityType" : "CUSTOMER",
      "id" : "543fe890-6f51-11ea-b009-812081829598"
    },
    "externalId" : null,
    "id" : {
      "entityType" : "DASHBOARD",
      "id" : "a47ff1c0-f860-11ec-a29c-3586948df39a"
    },
    "image" : null,
    "mobileHide" : false,
    "mobileOrder" : null,
    "name" : "Device Health Management",
    "ownerId" : {
      "entityType" : "CUSTOMER",
      "id" : "543fe890-6f51-11ea-b009-812081829598"
    },
    "tenantId" : null,
    "title" : "Device Health Management"
  },
  "attributes" : {
    "SERVER_SCOPE" : [ {
      "booleanValue" : null,
      "doubleValue" : null,
      "jsonValue" : null,
      "key" : "icon",
      "lastUpdateTs" : 1656948927117,
      "longValue" : null,
      "strValue" : "devices_other"
    }, {
      "booleanValue" : true,
      "doubleValue" : null,
      "jsonValue" : null,
      "key" : "isAdmin",
      "lastUpdateTs" : 1656948870487,
      "longValue" : null,
      "strValue" : null
    } ]
  }
}